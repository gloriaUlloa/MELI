
/**********MELI.CUSTOMERS********************/
CREATE TABLE MELI.CUSTOMERS( 
  	ID NUMBER(38,0) NOT NULL , 
	TYPE_ID CHAR(5 BYTE), 
	NUMBER_ID NUMBER(38,0), 
	FIRST_NAME NVARCHAR2(50) NOT NULL , 
    LAST_NAME NVARCHAR2(50) NOT NULL , 
	DISPLAY_NAME NVARCHAR2(75) NOT NULL , 	
	SEX CHAR(1 BYTE), 
	EMAIL NVARCHAR2(1) NOT NULL , 
	ADDRESS NVARCHAR2(500), 
	COUNTRY NVARCHAR2(60), 
	CITY NVARCHAR2(60), 
	BIRTH_DATE DATE, 
	TELEPHONE NUMBER(15,0), 
    CELL NUMBER(15,0), 
	SELLER CHAR(1 BYTE), 
	BUYER CHAR(1 BYTE), 
    STATUS CHAR(5 BYTE),
  
  CONSTRAINT PK_CUSTOMERS PRIMARY KEY(ID)
);  

CREATE UNIQUE INDEX MELI.CUSTOMERS_EMAILXU ON MELI.CUSTOMERS (EMAIL);
CREATE UNIQUE INDEX MELI.CUSTOMERS_TYPE_ID_NUMBER_IDXU ON MELI.CUSTOMERS (TYPE_ID,NUMBER_ID);   

CREATE SEQUENCE MELI.CUSTOMERS_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 NOCACHE;

CREATE OR REPLACE TRIGGER MELI.CUSTOMERS_TGR BEFORE
        INSERT ON MELI.CUSTOMERS
        REFERENCING
            NEW AS new
        FOR EACH ROW
        WHEN (new.id is null)
    BEGIN
        SELECT
            MELI.CUSTOMERS_SEQ.NEXTVAL
        INTO
            :new.id
        FROM
            dual;
    END; 
    
COMMENT ON TABLE MELI.CUSTOMERS IS 'Table Customer';
COMMENT ON COLUMN MELI.CUSTOMERS.ID IS 'PK - Table Sequence';
COMMENT ON COLUMN MELI.CUSTOMERS.TYPE_ID IS 'type of identification document';
COMMENT ON COLUMN MELI.CUSTOMERS.NUMBER_ID IS 'identification document number';
COMMENT ON COLUMN MELI.CUSTOMERS.FIRST_NAME IS 'customer first_name ';
COMMENT ON COLUMN MELI.CUSTOMERS.LAST_NAME IS 'customer last_name'; 
COMMENT ON COLUMN MELI.CUSTOMERS.DISPLAY_NAME IS 'customer username or full name '; 
COMMENT ON COLUMN MELI.CUSTOMERS.SEX IS 'customer sex'; 
COMMENT ON COLUMN MELI.CUSTOMERS.EMAIL IS 'customer email'; 
COMMENT ON COLUMN MELI.CUSTOMERS.ADDRESS IS 'customer address'; 
COMMENT ON COLUMN MELI.CUSTOMERS.COUNTRY IS 'country customer';
COMMENT ON COLUMN MELI.CUSTOMERS.CITY IS 'customer city'; 
COMMENT ON COLUMN MELI.CUSTOMERS.BIRTH_DATE IS 'customer birth_date'; 
COMMENT ON COLUMN MELI.CUSTOMERS.TELEPHONE IS 'customer telephone'; 
COMMENT ON COLUMN MELI.CUSTOMERS.CELL IS 'customer cell number'; 
COMMENT ON COLUMN MELI.CUSTOMERS.SELLER IS '1 is a seller 0 is not a seller'; 
COMMENT ON COLUMN MELI.CUSTOMERS.BUYER IS '1 is a buyer 0 is not a buyer'; 
COMMENT ON COLUMN MELI.CUSTOMERS.STATUS IS 'Customer status: ACTIV INACT SUSP';

/**********MELI.CATEGORYS********************/

CREATE TABLE MELI.CATEGORYS(     
    ID NUMBER(38,0) NOT NULL, 
	NAME NVARCHAR2(150) NOT NULL, 
	CODE CHAR(5 BYTE) NOT NULL, 
	PATH NVARCHAR2(250), 
	CATEGORY_ID NUMBER(38,0),  
 
  CONSTRAINT CATEGORYS_PK PRIMARY KEY(ID)
);  

ALTER TABLE MELI.CATEGORYS ADD CONSTRAINT CATEGORYS_CATEGORYS_FK FOREIGN KEY(CATEGORY_ID) 
REFERENCES MELI.CATEGORYS(ID);

CREATE SEQUENCE MELI.CATEGORYS_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 NOCACHE;

CREATE OR REPLACE TRIGGER MELI.CATEGORYS_TGR BEFORE
        INSERT ON MELI.CATEGORYS
        REFERENCING
            NEW AS new
        FOR EACH ROW
        WHEN (new.id is null)
    BEGIN
        SELECT
            MELI.CATEGORYS_SEQ.NEXTVAL
        INTO
            :new.id
        FROM
            dual;
    END; 
    
COMMENT ON TABLE MELI.CATEGORYS IS 'Table Categorys';
COMMENT ON COLUMN MELI.CATEGORYS.ID IS 'PK - Table Sequence';
COMMENT ON COLUMN MELI.CATEGORYS.NAME IS 'name category';
COMMENT ON COLUMN MELI.CATEGORYS.CODE IS 'code category';
COMMENT ON COLUMN MELI.CATEGORYS.PATH IS 'path category';
COMMENT ON COLUMN MELI.CATEGORYS.CATEGORY_ID IS 'parent category'; 

/**********MELI.ITEMS********************/
CREATE TABLE MELI.ITEMS(     
    ID NUMBER(38,0) NOT NULL , 
	NAME NVARCHAR2(150) NOT NULL , 
	DESCRIPTION NVARCHAR2(250), 
	FULL_DESCRIPTION CLOB, 
	STATUS CHAR(5 BYTE) NOT NULL , 
	PRICE NUMBER(15,0), 
	FABRICATION_DATE DATE, 
	EXPIRATION_DATE DATE, 
	MAKER NVARCHAR2(250), 
	MADE_IN NVARCHAR2(150), 
	CATEGORY_ID NUMBER(38,0) NOT NULL , 
    CATEGORY_CODE VARCHAR2(20 BYTE),
	ACTIVATION_DATE DATE, 
	INACTIVATION_DATE DATE, 
	
 
  
  CONSTRAINT ITEMS_PK PRIMARY KEY(ID)
);  

ALTER TABLE MELI.ITEMS ADD CONSTRAINT ITEMS_CATEGORYS_FK FOREIGN KEY(CATEGORY_ID) 
REFERENCES MELI.CATEGORYS(ID);

CREATE SEQUENCE MELI.ITEMS_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 NOCACHE;

CREATE OR REPLACE TRIGGER MELI.ITEMS_TGR BEFORE
        INSERT ON MELI.ITEMS
        REFERENCING
            NEW AS new
        FOR EACH ROW
        WHEN (new.id is null)
    BEGIN
        SELECT
            MELI.ITEMS_SEQ.NEXTVAL
        INTO
            :new.id
        FROM
            dual;
    END; 
    
COMMENT ON TABLE MELI.ITEMS IS 'Table Items';
COMMENT ON COLUMN MELI.ITEMS.ID IS 'PK - Table Sequence';
COMMENT ON COLUMN MELI.ITEMS.NAME IS 'item name';
COMMENT ON COLUMN MELI.ITEMS.DESCRIPTION IS 'item description';
COMMENT ON COLUMN MELI.ITEMS.FULL_DESCRIPTION IS 'item full description';
COMMENT ON COLUMN MELI.ITEMS.STATUS IS ' status item : enab - disab';
COMMENT ON COLUMN MELI.ITEMS.PRICE IS 'price item';
COMMENT ON COLUMN MELI.ITEMS.FABRICATION_DATE IS 'date of manufacturing of the article'; 
COMMENT ON COLUMN MELI.ITEMS.EXPIRATION_DATE IS 'date of expiration of the article '; 
COMMENT ON COLUMN MELI.ITEMS.MAKER IS 'item manufacturer'; 
COMMENT ON COLUMN MELI.ITEMS.MADE_IN IS 'item made in'; 
COMMENT ON COLUMN MELI.ITEMS.CATEGORY_ID IS 'article activation date';
COMMENT ON COLUMN MELI.ITEMS.CATEGORY_CODE IS 'code category';
COMMENT ON COLUMN MELI.ITEMS.ACTIVATION_DATE IS 'article activation date';
COMMENT ON COLUMN MELI.ITEMS.INACTIVATION_DATE IS 'article inactivation date'; 
 	
		

/**********MELI.ORDERS********************/
CREATE TABLE MELI.ORDERS( 
  	ID NUMBER(38,0) NOT NULL  , 
	NUMBER_ORDER NVARCHAR2(70) NOT NULL , 
	FULL_DATE_ORDER TIMESTAMP (6) NOT NULL , 
	DATE_ORDER DATE, 
	TIME_ORDER DATE, 
	CUSTOMER_ID NUMBER(38,0) NOT NULL , 
	ITEM_ID NUMBER(38,0) NOT NULL , 
	QUANTITY NUMBER(15,0) NOT NULL , 
	CURRENCY CHAR(5 BYTE),	
	UNIT_COST NUMBER(38,2), 
	DISCOUNT NUMBER(20,2), 
	TOTAL_COST NUMBER(38,0),
	STATUS CHAR(5 BYTE),
    
  CONSTRAINT ORDERS_PK PRIMARY KEY(ID)
);  

ALTER TABLE MELI.ORDERS ADD CONSTRAINT ORDERS_CUSTOMERS_FK FOREIGN KEY(CUSTOMER_ID) 
REFERENCES MELI.CUSTOMERS(ID); 

ALTER TABLE MELI.ORDERS ADD CONSTRAINT ORDERS_ITEMS_FK FOREIGN KEY(ITEM_ID) 
REFERENCES MELI.ITEMS(ID); 

CREATE INDEX MELI.ORDERS_ITEM_IDXU ON MELI.ORDERS (ITEM_ID);
CREATE INDEX MELI.ORDERS_CUSTOMER_IDXU ON MELI.ORDERS (CUSTOMER_ID);

CREATE SEQUENCE MELI.ORDERS_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 NOCACHE;

CREATE OR REPLACE TRIGGER MELI.ORDERS_TGR BEFORE
        INSERT ON MELI.ORDERS
        REFERENCING
            NEW AS new
        FOR EACH ROW
        WHEN (new.id is null)
    BEGIN
        SELECT
            MELI.ORDERS_SEQ.NEXTVAL
        INTO
            :new.id
        FROM
            dual;
    END; 
    
COMMENT ON TABLE MELI.ORDERS IS 'Table Orders';
COMMENT ON COLUMN MELI.ORDERS.ID IS 'PK - Table Sequence';
COMMENT ON COLUMN MELI.ORDERS.NUMBER_ORDER IS 'Number of Order';
COMMENT ON COLUMN MELI.ORDERS.FULL_DATE_ORDER IS 'Date and time of the order';
COMMENT ON COLUMN MELI.ORDERS.DATE_ORDER IS 'Date  of the order';
COMMENT ON COLUMN MELI.ORDERS.TIME_ORDER IS 'Time of the order'; 
COMMENT ON COLUMN MELI.ORDERS.CUSTOMER_ID IS 'Customer Identifier'; 
COMMENT ON COLUMN MELI.ORDERS.ITEM_ID IS 'Item Identifier'; 
COMMENT ON COLUMN MELI.ORDERS.QUANTITY IS 'Item Identifier'; 
COMMENT ON COLUMN MELI.ORDERS.CURRENCY IS 'Currency in which the order is charged'; 
COMMENT ON COLUMN MELI.ORDERS.UNIT_COST IS 'Unit Value';
COMMENT ON COLUMN MELI.ORDERS.DISCOUNT IS 'Discount Value'; 
COMMENT ON COLUMN MELI.ORDERS.TOTAL_COST IS 'Total Value'; 
COMMENT ON COLUMN MELI.ORDERS.STATUS IS 'Order status: canceled, in preparation, delivered'; 


/**********MELI.ITEM_CONSOLIDATION******/
CREATE TABLE MELI.ITEM_CONSOLIDATION(
  ID NUMBER(38,0),
  ITEM_ID NUMBER(38,0) NOT NULL,
  ITEM_PRICE NUMBER(15,0) NOT NULL,
  ITEM_STATUS NVARCHAR2(5) NOT NULL,
  ITEM_DATE DATE NOT NULL ,
  CONSTRAINT ITEM_CONSOLIDATION_PK PRIMARY KEY(ID)
);  

CREATE INDEX MELI.ITEM_CONSOLIDATION_ITEM_IDXU ON MELI.ITEM_CONSOLIDATION (ITEM_ID);

CREATE SEQUENCE MELI.ITEM_CONSOLIDATION_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 NOCACHE;

CREATE OR REPLACE TRIGGER MELI.ITEM_CONSOLIDATION_TGR BEFORE
        INSERT ON MELI.ITEM_CONSOLIDATION
        REFERENCING
            NEW AS new
        FOR EACH ROW
        WHEN (new.id is null)
    BEGIN
        SELECT
            MELI.ITEM_CONSOLIDATION_SEQ.NEXTVAL
        INTO
            :new.id
        FROM
            dual;
    END; 
    
COMMENT ON TABLE MELI.ITEM_CONSOLIDATION IS 'Table Item Consolidation';
COMMENT ON COLUMN MELI.ITEM_CONSOLIDATION.ID IS 'PK - Table Sequence';
COMMENT ON COLUMN MELI.ITEM_CONSOLIDATION.ITEM_ID IS 'item identifier';
COMMENT ON COLUMN MELI.ITEM_CONSOLIDATION.ITEM_PRICE IS 'item price';
COMMENT ON COLUMN MELI.ITEM_CONSOLIDATION.ITEM_STATUS IS 'item status (ACTIV, INACT)';
COMMENT ON COLUMN MELI.ITEM_CONSOLIDATION.ITEM_DATE IS 'record creation date'; 


